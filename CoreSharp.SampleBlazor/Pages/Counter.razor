@page "/counter"
@inject IJSRuntime JSRuntime
@implements IAsyncDisposable

<h1>Counter</h1>

<p>Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {

    // Load the module and keep a reference to it
    // You need to use .AsTask() to convert the ValueTask to Task as it may be awaited multiple times
    private Task<IJSObjectReference> _module;
    private Task<IJSObjectReference> Module => _module ??= JSRuntime.InvokeAsync<IJSObjectReference>("import", "/js/Counter.razor.js").AsTask();


    private int currentCount = 0;

    private async void IncrementCount()
    {
        currentCount++;

        var module = await this.Module;
        module.InvokeVoidAsync("test");
    }

    public async ValueTask DisposeAsync()
    {
        if (_module != null)
        {
            var module = await _module;
            await module.DisposeAsync();
        }
    }
}
